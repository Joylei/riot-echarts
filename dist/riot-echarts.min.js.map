{"version":3,"file":null,"sources":["../src/util.ts","../src/chartFactory.ts","../src/echart.ts","../src/dataTable.ts","../src/index.ts"],"sourcesContent":["export function extend(dest, src = {}){\n    const obj = dest || {}\n    Object.keys(src).forEach(key =>{\n        obj[key] = src[key]\n    });\n    return obj;\n}\n\nexport function isFunction(obj){\n    return typeof obj === 'function'\n}","import DataTable from './dataTable';\r\nimport { extend } from './util';\r\n\r\nconst COLORS = ['#a489d6', '#239afc', '#54d81c', '#5856ce', '#4386a0', '#093084', '#26aabf', '#5a25f9', '#76a0db', '#7588dd', '#f7eb91', '#daf783', '#d321e0', '#7634ef', '#05bc9b', '#cea146', '#ffbfc0', '#5dfc7d', '#ffc9f9', '#9ad5e0', '#8ea4e5', '#490c7f', '#49fcb4', '#20a33c', '#f7ee40', '#fcf63f', '#efef1f', '#f45642', '#e08374', '#30b6ff', '#f75f4f', '#27ddd7', '#af2f49', '#dbc4fc', '#53b220', '#a71dd1', '#15bfa2', '#f79f9e', '#c92427', '#380170', '#ed9f78', '#f464d5', '#dd6158', '#f7cfad', '#36e830', '#80f782', '#90f9ac', '#c69715', '#0a8ed6', '#9ec942', '#f9b1c8', '#a114ff', '#51dba4', '#a4abf2'];\r\n\r\nfunction addToolbox(option) {\r\n    option.toolbox = {\r\n        show: true,\r\n        feature: {\r\n            magicType: {\r\n                type: ['line', 'bar', 'stack'],\r\n                title: {\r\n                    'line': 'Line Chart',\r\n                    'bar': 'Column Chart',\r\n                    'stack': 'Stacked Bar Chart'\r\n                }\r\n            },\r\n            restore: {\r\n                title: 'Restore'\r\n            },\r\n            saveAsImage: {\r\n                title: 'Save AS Image'\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nfunction addRoom(option) {\r\n    option.dataZoom = {\r\n        show: true,\r\n        realtime: true,\r\n        //dataBackgroundColor: \"#80D9C3\",\r\n        handleColor: '#018564',\r\n        fillerColor: '#80D9C3',\r\n        handleSize: 3,\r\n        //y : 'bottom',\r\n        height: 20,\r\n        start: 50,\r\n        end: 100\r\n    }\r\n}\r\n\r\nfunction create({type, table, color, dataZoom, toolbox}) {\r\n    let option = {\r\n        legend: { // legend configuration\r\n            //padding: 5, // The inner padding of the legend, in px, defaults to 5. Can be set as array - [top, right, bottom, left].\r\n            //itemGap: 10, // The pixel gap between each item in the legend. It is horizontal in a legend with horizontal layout, and vertical in a legend with vertical layout.\r\n            data: [],\r\n            align: 'left'\r\n        },\r\n        tooltip: { // tooltip configuration\r\n            trigger: 'item', // trigger type. Defaults to data trigger. Can also be: 'axis'\r\n        },\r\n        xAxis: [ // The horizontal axis in Cartesian coordinates\r\n            {\r\n                type: 'category', // Axis type. xAxis is category axis by default. As for value axis, please refer to the 'yAxis' chapter.\r\n                boundaryGap: true,\r\n                axisLabel: {\r\n                    show: true,\r\n                    interval: 'auto',\r\n                    textStyle: {\r\n                        fontStyle: 'italic'\r\n                    }\r\n                },\r\n                data: []\r\n            }\r\n        ],\r\n        yAxis: [ // The vertical axis in Cartesian coordinates\r\n            {\r\n                type: 'value', // Axis type. yAxis is value axis by default. As for category axis, please refer to the 'xAxis' chapter.\r\n                //boundaryGap: [0.1, 0.1], // Blank border on each side of the coordinate axis. Value in the array represents percentage.\r\n                //splitNumber: 4 // Applicable to value axis. The number of segments. Defaults to 5.\r\n            }\r\n        ],\r\n        series: [],\r\n        color,\r\n        calculable: false,\r\n\r\n    };\r\n    const colCount = table.columnCount;\r\n    if (colCount > 1) {\r\n        for (let colIndex = 1; colIndex < colCount; colIndex++) {\r\n            const colName = table.getColumn(colIndex).name;\r\n            option.legend.data.push(colName);\r\n            option.series.push({\r\n                name: colName,\r\n                type: type,\r\n                data: []\r\n            });\r\n        }\r\n        const rowCount = table.rowCount;\r\n        for (let i = 0; i < rowCount; i++) {\r\n            for (let j = 0; j < colCount; j++) {\r\n                if (j === 0) {\r\n                    option.xAxis[0].data.push(table.getValue(i, j));\r\n                } else {\r\n                    option.series[j - 1].data.push(table.getValue(i, j));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (toolbox === true) {\r\n        addToolbox(option)\r\n    } else if (toolbox) {\r\n        (<any>option).toolbox = toolbox\r\n    }\r\n    if (dataZoom === true) {\r\n        addRoom(option)\r\n    } else if (dataZoom) {\r\n        (<any>option).dataZoom = dataZoom\r\n    }\r\n    return option;\r\n}\r\n\r\nconst factory = {\r\n    'line': function (obj) {\r\n        return create(obj);\r\n    },\r\n    'bar': function (obj) {\r\n        let option = create(obj)\r\n        option.series.forEach(serie =>{\r\n            extend(serie, {\r\n                barMaxWidth: 30,\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        position: 'outside'\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        return option;\r\n    },\r\n    'pie': function (obj) {\r\n        var option = <any>create(obj)\r\n        option.tooltip.formatter = '{a} <br/>{b} : {c} ({d}%)'\r\n        let serie = option.series[0];\r\n        if(serie){\r\n            extend(serie, {\r\n                radius: '55%',\r\n                center: ['50%', '50%'],\r\n                data: []\r\n            })\r\n        }\r\n        return option;\r\n    }\r\n};\r\n\r\nexport default function createChartOption({type, data, color = COLORS, dataZoom, toolbox}) {\r\n    let fn = factory[type];\r\n    if (fn) {\r\n        let table = data instanceof DataTable ? data : new DataTable(data);\r\n        return fn({ type, table, color, dataZoom, toolbox });\r\n    } else {\r\n        throw new Error('unsupported chart type in simple mode, please use option directly')\r\n    }\r\n}\r\n","import factory from './chartFactory';\r\nimport * as echarts from 'echarts'\r\nimport DataTable from './dataTable';\r\nimport * as riot from 'riot';\r\nimport {isFunction, extend} from './util'\r\n\r\ninterface IEchartTag extends RiotTag {\r\n    isMounted: boolean;\r\n    chart: any;\r\n    drawChart();\r\n    redrawChart();\r\n    destroyChart();\r\n}\r\n\r\ntype Callback = (err, data) => any;\r\ntype DataFunc = () => (DataTable | any[] | Thenable)\r\ntype LazyDataFunc = (cb:Callback)=>any\r\ntype Thenable = { then:(success: (data) => any, error: (err)=>any)=>any }\r\ninterface IEchartTagOpts {\r\n    /**\r\n     * ECharts option\r\n     */\r\n    option?: any,\r\n    simple?: {\r\n        /**\r\n         * chart type\r\n         */\r\n        type?: string,\r\n        /**\r\n         * color sheets;\r\n         */\r\n        color?: Array<string>,\r\n\r\n        /**\r\n         * ECharts toolbox options\r\n         */\r\n        toolbox?: boolean | Object,\r\n\r\n        /**\r\n         * ECharts dataZoom options\r\n         */\r\n        dataZoom?: boolean | Object, \r\n        /**\r\n         * provide data directly; otherwise be provided by function;\r\n         * the data can be:\r\n         * - DataTable\r\n         * - any[][]\r\n         * - a function returns DataTable or any[][]\r\n         * - a function returns thenable object\r\n         * - a thenable object\r\n         * - a function accept a callback to handle data \r\n         */\r\n        data?: DataTable | any[] | Thenable | DataFunc | LazyDataFunc;\r\n    }\r\n}\r\n\r\nconst DRAW_DELAY = 500;\r\n/**\r\n   * delay function call until there is no more invocation;\r\n   * taken from https://remysharp.com/2010/07/21/throttling-function-calls\r\n   * @param  {Function} fn    [description]\r\n   * @param  {number}   delay [description]\r\n   * @param  {any}      scope [description]\r\n   * @return {Function}       [description]\r\n   */\r\nfunction debounce(fn: Function, delay: number, scope?: any) {\r\n    let timer = null;\r\n    return function(...args) {\r\n        let context = scope || this;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(function() {\r\n            fn.apply(context, args);\r\n        }, delay);\r\n    };\r\n}\r\n\r\nriot.tag('echart', '<div class=\"chart\" ref=\"chartHost\" ></div>',\r\n    'echart, echart .chart,[data-is=\"echart\"], [data-is=\"echart\"] .chart {display:block; width:100%; height: 100%;}', \r\n    function(opts: IEchartTagOpts) {\r\n    let self = <IEchartTag>this;\r\n    let chart = null;\r\n    \r\n    Object.defineProperty(self, 'chart', {\r\n        get(){\r\n            return chart\r\n        }\r\n    })\r\n\r\n    function getHost(){\r\n        //compatible with riot@2.x.x\r\n        return self.refs['chartHost'] || self.root.querySelector('[.chart]')\r\n    }\r\n\r\n    let _chartHost:HTMLElement\r\n    let _option = {}\r\n    self.on('mount', () => {\r\n        if(!echarts || !isFunction(echarts.init)){\r\n            throw new Error('please import ECharts!!!')\r\n        }\r\n\r\n        _chartHost = <HTMLElement>getHost();\r\n        self.drawChart()\r\n    });\r\n\r\n    self.on('unmount', () => {\r\n        self.destroyChart();\r\n    });\r\n\r\n    self.on('updated', ()=>{\r\n        self.drawChart()\r\n    })\r\n\r\n    self.drawChart = debounce(() => {\r\n        if (!self.isMounted || !_chartHost) {\r\n            return;\r\n        }\r\n        if (!chart) {\r\n            chart = echarts.init(_chartHost);\r\n        }\r\n        if(opts.option){\r\n            chart.setOption(opts.option);\r\n            return\r\n        }\r\n        if(opts.simple){\r\n            const chartType = opts.simple.type || 'pie';\r\n            chart && chart.showLoading()\r\n            const cb = (err, data)=>{\r\n                if(err){\r\n                    console.error(err);\r\n                    return\r\n                }\r\n                if(data && isFunction(data.then)) {\r\n                    data.then(d => cb(null,d), cb)\r\n                    return\r\n                }\r\n                let chartObj = extend({},opts.simple)\r\n                chartObj.data = data\r\n                const option = factory(chartObj);\r\n                if (option && chart) {\r\n                    chart.setOption(option);\r\n                }\r\n                chart && chart.hideLoading()\r\n            };\r\n            let data;\r\n            if(isFunction(opts.simple.data)){\r\n                let result = (<any>opts.simple.data).call(null, cb)\r\n                if(!result) {\r\n                    return\r\n                }\r\n                data = result\r\n            }\r\n            data = data || opts.simple.data\r\n            if(data){\r\n                cb(null, data)\r\n            }else{\r\n                chart && chart.hideLoading()\r\n            }\r\n        }\r\n    }, DRAW_DELAY);\r\n\r\n    self.redrawChart = () => {\r\n        self.destroyChart();\r\n        self.update();\r\n    };\r\n\r\n    self.destroyChart = () => {\r\n        if (chart) {\r\n            chart.dispose();\r\n            chart = null;\r\n        }\r\n    };\r\n});\r\n\r\n//hook window resize event\r\nwindow.addEventListener('resize', debounce(function(e){\r\n    let charts = [].slice.call(document.querySelectorAll('echart, [data-is=\"echart\"]'))\r\n    charts.forEach(el =>{\r\n        let tag = <IEchartTag>el._tag\r\n        if(tag && tag.chart){\r\n            tag.chart.resize()\r\n        }\r\n    })\r\n}, 300))","type Field = { name: string };\r\n/**\r\n* Wrap data array for convinient operations.\r\n* the first line of the array is columns,\r\n* and the rest lines are data rows\r\n*/\r\nexport default class DataTable {\r\n    columns: Field[];\r\n    rows: any[][];\r\n    /**\r\n    * @param {Object[][]} data the first line of the array is columns,and the rest lines are data rows\r\n    */\r\n    constructor(data: any[][]) {\r\n        data = data || [];\r\n\r\n        this.columns = [];\r\n        let columns = data[0] || [];\r\n        columns.forEach(item => this.columns.push({ name: item }))\r\n        this.rows = data.slice(1);\r\n    }\r\n\r\n    getColumn(col: number) {\r\n        return this.columns[col];\r\n    }\r\n\r\n    get columnCount() {\r\n        return this.columns.length;\r\n    }\r\n\r\n    get rowCount() {\r\n        return this.rows.length;\r\n    }\r\n\r\n    getRow(row: number) {\r\n        return this.rows[row];\r\n    }\r\n\r\n    getValue(row: number, col: number) {\r\n        if (row < 0 || col < 0) return null;\r\n\r\n        const item = this.rows[row];\r\n        return item ? item[col] : null;\r\n    }\r\n\r\n    setValue(row: number, col: number, val) {\r\n        if (row < 0 || col < 0) return;\r\n\r\n        const item = this.rows[row] || (this.rows[row] = []);\r\n        item[col] = val;\r\n    }\r\n\r\n    /**\r\n    * convert data rows to objects\r\n    * @return {Object[]}\r\n    */\r\n    toJSON(): Object[] {\r\n        return this.rows.map(row => {\r\n            const item = {};\r\n            this.columns.forEach((col, index) => item[col.name] = row[index])\r\n            return item;\r\n        });\r\n    }\r\n}\r\n","import DataTable from './dataTable';\r\nimport factory from './chartFactory';\r\nimport './echart';\r\n\r\nexport default {\r\n    DataTable,\r\n    factory\r\n};\r\n"],"names":["dest","src","const","obj","Object","keys","forEach","key","option","toolbox","show","feature","magicType","type","title","line","bar","stack","restore","saveAsImage","dataZoom","realtime","handleColor","fillerColor","handleSize","height","start","end","ref","table","color","legend","data","align","tooltip","trigger","xAxis","boundaryGap","axisLabel","interval","textStyle","fontStyle","yAxis","series","calculable","colCount","columnCount","let","colIndex","colName","getColumn","name","push","rowCount","i","j","getValue","addToolbox","addRoom","COLORS","fn","factory","DataTable","Error","delay","scope","timer","context","this","clearTimeout","setTimeout","apply","args","columns","item","rows","slice","col","length","getRow","row","setValue","val","toJSON","map","index","create","serie","extend","barMaxWidth","label","normal","position","pie","formatter","radius","center","DRAW_DELAY","riot.tag","opts","self","refs","root","querySelector","chart","defineProperty","get","_chartHost","on","echarts","isFunction","echarts.init","getHost","drawChart","destroyChart","debounce","isMounted","setOption","simple","showLoading","cb","err","console","error","then","d","chartObj","hideLoading","result","call","redrawChart","update","dispose","window","addEventListener","e","charts","document","querySelectorAll","el","tag","_tag","resize"],"mappings":"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"}